{"version":3,"file":"static/js/851.5f793c93.chunk.js","mappings":"+MAIA,EAJe,WACb,OAAO,sEACR,E,6CCAYA,EAAOC,EAAAA,GAAAA,GAAH,iGAOJC,EAAWD,EAAAA,GAAAA,GAAH,yDAGRE,EAAMF,EAAAA,GAAAA,IAAH,2CCiChB,EAtCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKA,KAAKP,KAAtB,GAC3B,GAAE,CAACE,IAECF,EAIL,OACE,UAACL,EAAD,WACmB,IAAhBK,EAAKQ,SAAgB,SAAC,EAAD,IAErBR,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,cAAeC,EAA1C,EAA0CA,UAA1C,OACR,UAACjB,EAAD,YACE,SAACC,EAAD,CACEiB,MAAM,MACNC,IACEL,EAnBO,mCAoBUA,EACb,yCAENM,IAAI,UAEN,4BACE,wBAAKL,GAAQC,KACb,uBAAIC,SAZOJ,EADP,MAmBf,C,oKCzCKQ,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAGXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,WACzB,OAAOD,EAAAA,EAAAA,IAAA,6BAAgCH,GACxC,EAEYK,EAAY,SAAAX,GACvB,OAAOS,EAAAA,EAAAA,IAAA,wBAA2BH,EAA3B,kBAAiDN,GACzD,EAEYY,EAAa,SAAAd,GACxB,OAAOW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,YAA0BQ,GAClC,EAEYb,EAAU,SAAAK,GACrB,OAAOW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,oBAAkCQ,GAC1C,EAEYO,EAAa,SAAAf,GACxB,OAAOW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,oBAAkCQ,GAC1C,C","sources":["Error/NoCast.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesAPI.jsx"],"sourcesContent":["const NoCast = () => {\n  return <p>Sorry, we don't have any cast on this movie</p>;\n};\n\nexport default NoCast;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  width: calc((100% - 20) / 6);\n`;\nexport const Img = styled.img`\n  display: block;\n`;\n","import NoCast from 'Error/NoCast';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/moviesAPI';\n\nimport { List, ListItem, Img } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    getCast(movieId).then(data => setCast(data.data.cast));\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <List>\n      {cast.length === 0 && <NoCast />}\n\n      {cast.map(({ id, profile_path, name, original_name, character }) => (\n        <ListItem key={id}>\n          <Img\n            width=\"200\"\n            src={\n              profile_path\n                ? imgBaseUrl + profile_path\n                : 'https://svgsilh.com/svg_v2/1363011.svg'\n            }\n            alt=\"Foto\"\n          />\n          <div>\n            <h2>{name && original_name}</h2>\n            <p>{character}</p>\n          </div>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'ffe5635381226a05cd5d4da4ec565c9d',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = () => {\n  return axios.get(`/trending/all/week?${searchParams}`);\n};\n\nexport const getByName = name => {\n  return axios.get(`/search/movie?${searchParams}&query=${name}`);\n};\n\nexport const getDetails = id => {\n  return axios.get(`/movie/${id}?${searchParams}`);\n};\n\nexport const getCast = id => {\n  return axios.get(`/movie/${id}/credits?${searchParams}`);\n};\n\nexport const getReviews = id => {\n  return axios.get(`/movie/${id}/reviews?${searchParams}`);\n};\n"],"names":["List","styled","ListItem","Img","useState","cast","setCast","movieId","useParams","useEffect","getCast","then","data","length","map","id","profile_path","name","original_name","character","width","src","alt","searchParams","URLSearchParams","api_key","axios","getTrending","getByName","getDetails","getReviews"],"sourceRoot":""}