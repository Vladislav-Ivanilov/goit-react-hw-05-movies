{"version":3,"file":"static/js/308.f0a53d9f.chunk.js","mappings":"2PAQaA,EAAOC,EAAAA,GAAAA,KAAH,mHAOJC,EAAQD,EAAAA,GAAAA,MAAH,4PAYLE,EAASF,EAAAA,GAAAA,OAAH,wT,SCzBNG,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpC,OACE,UAACN,EAAD,CAAMM,SAAUA,EAAhB,WACE,SAACJ,EAAD,CAAOK,KAAK,OAAOF,SAAUA,KAC7B,SAACF,EAAD,CAAQI,KAAK,SAAb,sBAGL,EC2BD,EA9Be,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRL,EAAK,UAAGG,EAAaG,IAAI,gBAApB,QAAgC,GACtCN,IAILO,EAAAA,EAAAA,IAAUP,GAAOQ,MAAK,SAAAC,GAAG,OAAIV,EAAUU,EAAIC,KAAKC,QAAvB,GAC1B,GAAE,CAACX,EAAOG,IAUX,OACE,iCACE,SAACV,EAAD,CAAWE,SARM,SAAAiB,GACnBA,EAAQC,iBAERT,EAA0B,KAAVJ,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC7C,EAIsCN,SAVlB,SAAAkB,GAAO,OAAIX,EAASW,EAAQE,OAAOC,MAA5B,KAWxB,SAAC,IAAD,CAAYjB,OAAQA,MAGzB,C,uGC/BYkB,EAAc1B,EAAAA,GAAAA,GAAH,6HAQX2B,EAAY3B,EAAAA,GAAAA,GAAH,2DAIT4B,EAAW5B,EAAAA,GAAAA,IAAH,2DAKR6B,GAAO7B,EAAAA,EAAAA,IAAO8B,EAAAA,GAAP9B,CAAH,6LAUJ+B,EAAO/B,EAAAA,GAAAA,EAAH,6D,SCrBJgC,EAAa,SAAC,GAAgB,IAAdxB,EAAa,EAAbA,OACrByB,GAAWC,EAAAA,EAAAA,MAGjB,OACE1B,IACE,SAACkB,EAAD,UACGlB,EAAO2B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,YAA7B,OACV,SAACZ,EAAD,WACE,UAACE,EAAD,CAAMW,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACL,EAAD,CACEe,IACEJ,EAVK,mCAWcA,EACf,yCAENK,IAAI,UAEN,SAACb,EAAD,iBAAOM,QAAP,IAAOA,EAAAA,EAASC,QAVJF,EADN,KAkBnB,C,oKChCKvB,EAAe,IAAIgC,gBAAgB,CACvCC,QAAS,qCAGXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,WACzB,OAAOD,EAAAA,EAAAA,IAAA,6BAAgClC,GACxC,EAEYI,EAAY,SAAAgC,GACvB,OAAOF,EAAAA,EAAAA,IAAA,wBAA2BlC,EAA3B,kBAAiDoC,GACzD,EAEYC,EAAa,SAAAd,GACxB,OAAOW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,YAA0BvB,GAClC,EAEYsC,EAAU,SAAAf,GACrB,OAAOW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,oBAAkCvB,GAC1C,EAEYuC,EAAa,SAAAhB,GACxB,OAAOW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,oBAAkCvB,GAC1C,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","Page/Movies/Movies.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n//.color1 {color: #2b7bc8;}\n//.color2 {color: #8a99dc;}\n//.color3 {color: #c9b2e5;}\n//.color4 {color: #ebceea;}\n//.color5 {color: #f0e9f0;}\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px 10px;\n  background-color: #2b7bc8;\n  border: transparent;\n  outline: transparent;\n  color: #f0e9f0;\n  font-weight: 400;\n  font-size: 22px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n  padding: 5px 10px;\n  background-color: #2b7bc8;\n  border: transparent;\n  outline: transparent;\n  color: #f0e9f0;\n  font-weight: 400;\n  font-size: 22px;\n  border-left: solid 1px #f0e9f0;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n`;\n","import { Form, Input, Button } from './SearchBox.styled';\n\nexport const SearchBox = ({ onChange, onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input type=\"text\" onChange={onChange} />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getByName } from 'services/moviesAPI';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) {\n      return;\n    }\n\n    getByName(query).then(res => setMovies(res.data.results));\n  }, [query, searchParams]);\n\n  const handleChange = element => setQuery(element.target.value);\n\n  const handleSubmit = element => {\n    element.preventDefault();\n\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <>\n      <SearchBox onSubmit={handleSubmit} onChange={handleChange} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesBlock = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  width: calc((100% - 20px) / 5);\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  width: 100%;\n`;\n\nexport const Link = styled(NavLink)`\n  display: block;\n  text-align: center;\n  font-weight: 700;\n  font-size: 22px;\n  color: #2b7bc8;\n  border-bottom: solid 5px #2b7bc8;\n  text-decoration: none;\n`;\n\nexport const Name = styled.p`\n  margin: 0;\n  padding: 20px 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesBlock,\n  MovieItem,\n  MovieImg,\n  Link,\n  Name,\n} from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    movies && (\n      <MoviesBlock>\n        {movies.map(({ id, title, original_name, poster_path }) => (\n          <MovieItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <MovieImg\n                src={\n                  poster_path\n                    ? imageBaseUrl + poster_path\n                    : 'https://svgsilh.com/svg_v2/1363011.svg'\n                }\n                alt=\"Foto\"\n              />\n              <Name>{title ?? original_name}</Name>\n            </Link>\n          </MovieItem>\n        ))}\n      </MoviesBlock>\n    )\n  );\n};\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'ffe5635381226a05cd5d4da4ec565c9d',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = () => {\n  return axios.get(`/trending/all/week?${searchParams}`);\n};\n\nexport const getByName = name => {\n  return axios.get(`/search/movie?${searchParams}&query=${name}`);\n};\n\nexport const getDetails = id => {\n  return axios.get(`/movie/${id}?${searchParams}`);\n};\n\nexport const getCast = id => {\n  return axios.get(`/movie/${id}/credits?${searchParams}`);\n};\n\nexport const getReviews = id => {\n  return axios.get(`/movie/${id}/reviews?${searchParams}`);\n};\n"],"names":["Form","styled","Input","Button","SearchBox","onChange","onSubmit","type","useState","movies","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","getByName","then","res","data","results","element","preventDefault","target","value","MoviesBlock","MovieItem","MovieImg","Link","NavLink","Name","MoviesList","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","alt","URLSearchParams","api_key","axios","getTrending","name","getDetails","getCast","getReviews"],"sourceRoot":""}