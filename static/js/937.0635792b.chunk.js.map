{"version":3,"file":"static/js/937.0635792b.chunk.js","mappings":"mPAQaA,EAAYC,EAAAA,GAAAA,IAAH,wD,SCNTC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAI5DC,EADa,mCACOC,OAAOP,GAC3BQ,EAAUN,EAAaO,MAAM,EAAG,GAChCC,EAASP,EAAaQ,QAAQ,GAC9BC,EAAaP,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAExD,OACE,UAACpB,EAAD,YACE,0BACE,gBAAKqB,IAAKX,EAAQY,IAAKjB,EAAOkB,MAAM,WAEtC,4BACE,0BACGlB,EADH,KACU,gCAAQO,EAAR,WAEV,wCAAgBE,MAChB,sCACA,uBAAIN,KACJ,qCACA,uBAAIQ,SAIX,E,QC1BYhB,EAAYC,EAAAA,GAAAA,IAAH,iEAKTuB,GAAOvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAH,oJC+BjB,EAjCqB,WAAO,IAAD,IACzB,GAAwCyB,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWL,GAASM,MAAK,SAAAC,GAAG,OAAIR,EAAgBQ,EAAIC,KAAxB,GAC7B,GAAE,CAACR,KAECF,EACH,OAAO,KAET,IAAMW,EAAQ,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,iCACE,UAAC,EAAD,YACE,SAAChB,EAAD,CAAMiB,GAAIH,EAAV,8BACA,SAACpC,EAAD,CAAWC,MAAOwB,QAEpB,UAAC,EAAD,YACE,SAACH,EAAD,CAAMiB,GAAI,OAAQF,MAAO,CAAEC,KAAMF,GAAjC,mBAGA,SAACd,EAAD,CAAMiB,GAAI,UAAWF,MAAO,CAAEC,KAAMF,GAApC,yBAIF,SAAC,KAAD,MAGL,C,oKCnCKI,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAGXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,WACzB,OAAOD,EAAAA,EAAAA,IAAA,6BAAgCH,GACxC,EAEYK,EAAY,SAAA5B,GACvB,OAAO0B,EAAAA,EAAAA,IAAA,wBAA2BH,EAA3B,kBAAiDvB,GACzD,EAEYe,EAAa,SAAAc,GACxB,OAAOH,EAAAA,EAAAA,IAAA,iBAAoBG,EAApB,YAA0BN,GAClC,EAEYO,EAAU,SAAAD,GACrB,OAAOH,EAAAA,EAAAA,IAAA,iBAAoBG,EAApB,oBAAkCN,GAC1C,EAEYQ,EAAa,SAAAF,GACxB,OAAOH,EAAAA,EAAAA,IAAA,iBAAoBG,EAApB,oBAAkCN,GAC1C,C","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","Page/MovieDetails/MovieDetails.styled.jsx","Page/MovieDetails/MovieDetails.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n//.color1 {color: #2b7bc8;}\n//.color2 {color: #8a99dc;}\n//.color3 {color: #c9b2e5;}\n//.color4 {color: #ebceea;}\n//.color5 {color: #f0e9f0;}\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n","import { Container } from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const imgUrl = imgBaseUrl.concat(poster_path);\n  const release = release_date.slice(0, 4);\n  const rating = vote_average.toFixed(1);\n  const genresList = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <Container>\n      <div>\n        <img src={imgUrl} alt={title} width=\"350\" />\n      </div>\n      <div>\n        <h2>\n          {title} <span>({release})</span>\n        </h2>\n        <p>User score: {rating}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres:</h3>\n        <p>{genresList}</p>\n      </div>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`;\n\nexport const Back = styled(NavLink)`\n  display: block;\n  margin: 30px 0;\n  color: #2b7bc8;\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 22px;\n`;\n","import { getDetails } from 'services/moviesAPI';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Back, Container } from './MovieDetails.styled.jsx';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getDetails(movieId).then(res => setMovieDetails(res.data));\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Container>\n        <Back to={backLink}> ‚Üê Go back</Back>\n        <MovieCard movie={movieDetails} />\n      </Container>\n      <Container>\n        <Back to={'cast'} state={{ from: backLink }}>\n          Cast\n        </Back>\n        <Back to={'reviews'} state={{ from: backLink }}>\n          Reviews\n        </Back>\n      </Container>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'ffe5635381226a05cd5d4da4ec565c9d',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = () => {\n  return axios.get(`/trending/all/week?${searchParams}`);\n};\n\nexport const getByName = name => {\n  return axios.get(`/search/movie?${searchParams}&query=${name}`);\n};\n\nexport const getDetails = id => {\n  return axios.get(`/movie/${id}?${searchParams}`);\n};\n\nexport const getCast = id => {\n  return axios.get(`/movie/${id}/credits?${searchParams}`);\n};\n\nexport const getReviews = id => {\n  return axios.get(`/movie/${id}/reviews?${searchParams}`);\n};\n"],"names":["Container","styled","MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","imgUrl","concat","release","slice","rating","toFixed","genresList","map","genre","name","join","src","alt","width","Back","NavLink","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","useEffect","getDetails","then","res","data","backLink","state","from","to","searchParams","URLSearchParams","api_key","axios","getTrending","getByName","id","getCast","getReviews"],"sourceRoot":""}